<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<import resource="application-core.xml" />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<context:annotation-config/>

	<bean id="dataSource"  parent="baseDataSource" p:url="${jdbc.url}" />

	<bean id="txManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- mapper扫描 -->
		<property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- ================ Shiro start ================ -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="ShiroRealm" class="com.integrate.admin.interceptor.shiro.ShiroRealm" ></bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<property name="loginUrl" value="/login_toLogin" />

		<property name="successUrl" value="/main/index" />

		<property name="unauthorizedUrl" value="/login_toLogin" />

		<property name="filterChainDefinitions">
			<value>
				/static/login/** 			= anon
				/static/js/myjs/** 			= authc
				/static/js/** 				= anon
				/uploadFiles/uploadImgs/** 	= anon
				/code.do 					= anon
				/login_login	 			= anon
				/app**/** 					= anon
				/weixin/** 					= anon
				/**							= authc
			</value>
		</property>
	</bean>
	<!-- ================ Shiro end ================ -->

	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>

	<!-- 对静态资源文件的访问  restful-->
	<mvc:resources mapping="/admin/**" location="/,/admin/" />
	<mvc:resources mapping="/static/**" location="/,/static/" />
	<mvc:resources mapping="/plugins/**" location="/,/plugins/" />
	<mvc:resources mapping="/uploadFiles/**" location="/,/uploadFiles/" />

	<!-- 访问拦截  -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/**"/>
			<mvc:exclude-mapping path="/plugins/**" />
			<mvc:exclude-mapping path="/static/**" />
			<mvc:exclude-mapping path="/favicon.ico" />
			<bean class="com.integrate.admin.interceptor.LoginHandlerInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<bean id="exceptionResolver" class="com.integrate.admin.resolver.MyExceptionResolver"></bean>
	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize">
			<value>10485760000</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>

	<task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
	<task:executor id="myExecutor" pool-size="5" />
	<task:scheduler id="myScheduler" pool-size="2" />

</beans>